{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/main/orders/index.js","constants/DateConstant.js"],"names":["renderAvatar","props","_jsx","Avatar","className","type","children","text","AvatarStatus","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","EllipsisDropdown","Dropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Menu","Option","Select","paymentStatusList","Orders","list","setList","useState","OrderListData","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","tableColumns","title","dataIndex","render","_","record","image","sorter","a","b","utils","antdTableSorter","moment","unix","date","format","_Fragment","Tag","color","status","orderStatus","Badge","paymentStatus","NumberFormat","displayType","value","Math","round","amount","toFixed","prefix","thousandSeparator","elm","Item","Flex","alignItems","EyeOutlined","PlusCircleOutlined","rowSelection","onChange","key","rows","Card","justifyContent","mobileFlex","Input","placeholder","SearchOutlined","e","currentTarget","searchArray","data","wildCardSearch","onSearch","defaultValue","style","minWidth","filterArray","map","Button","FileExcelOutlined","block","Table","columns","dataSource","rowKey","preserveSelectedRowKeys"],"mappings":"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","file":"static/js/26.14d00896.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{ src && renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {useState} from 'react'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag } from 'antd';\r\nimport OrderListData from \"assets/data/order-list.data.json\"\r\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst paymentStatusList = ['Paid', 'Pending', 'Expired']\r\n\r\nconst Orders = () => {\r\n\r\n\tconst [list, setList] = useState(OrderListData)\r\n\tconst [selectedRows, setSelectedRows] = useState([])\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n\tconst handleShowStatus = value => {\r\n\t\tif(value !== 'All') {\r\n\t\t\tconst key = 'paymentStatus'\r\n\t\t\tconst data = utils.filterArray(OrderListData, key, value)\r\n\t\t\tsetList(data)\r\n\t\t} else {\r\n\t\t\tsetList(OrderListData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst dropdownMenu = row => (\r\n\t\t<Menu>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<EyeOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<PlusCircleOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Add to remark</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t);\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'ID',\r\n\t\t\tdataIndex: 'id'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Product',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'date',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Order status',\r\n\t\t\tdataIndex: 'orderStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Payment status',\r\n\t\t\tdataIndex: 'paymentStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Badge status={getPaymentStatus(record.paymentStatus)} /><span>{record.paymentStatus}</span></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Total',\r\n\t\t\tdataIndex: 'amount',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\t\r\n\tconst rowSelection = {\r\n\t\tonChange: (key, rows) => {\r\n\t\t\tsetSelectedRows(rows)\r\n\t\t\tsetSelectedRowKeys(key)\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : OrderListData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t\tsetSelectedRowKeys([])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tonChange={handleShowStatus} \r\n\t\t\t\t\t\t\tplaceholder=\"Status\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"All\">All payment </Option>\r\n\t\t\t\t\t\t\t{paymentStatusList.map(elm => <Option key={elm} value={elm}>{elm}</Option>)}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button type=\"primary\" icon={<FileExcelOutlined />} block>Export All</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t\trowSelection={{\r\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\r\n\t\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\r\n\t\t\t\t\t\t...rowSelection,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Orders\r\n","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; "],"sourceRoot":""}